---
import Button from '@elements/Button.astro'
import CommonModal from '@elements/CommonModal.astro'
import Image from '@elements/Image.astro'

export const modal = '#form-answer'
---

<!-- SINGLETON -->
<CommonModal
  tag="e-form-answer"
  id="form-answer"
  class="form-answer"
>
  <div class="form-answer__content">
    <Image
      class="form-answer__image"
      src="/images/icons/successful-submission.svg"
      lazy
      lazyBackground
      cover
    />

    <div class="font-h3 font-mob-h2 form-answer__title">Title</div>
    <div class="font-p2 font-mob-p3 form-answer__message">Message</div>
    <Button
      class="form-answer__continue"
      modal="form-answer"
      >Продолжить</Button
    >
  </div>
</CommonModal>

<style is:global>
  .form-answer {
    --dominance: 1;
  }

  .form-answer__content {
    padding: 5rem;
    padding-top: 14.4rem;
    width: 53.9rem;

    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 5rem;

    height: max-content;

    overflow: hidden;

    background-color: var(--color-background);
    border-radius: 2rem;

    @media (max-width: 768px) {
      width: 100%;
      min-height: 100%;
      gap: 3rem;
      padding: 9.4rem var(--screen-horisontal-padding) 3rem var(--screen-horisontal-padding);
      border-radius: 0;
    }
  }

  .form-answer__image {
    width: 19.5rem;
    height: 19.5rem;

    @media (max-width: 768px) {
      width: 14.3rem;
      height: 14.3rem;
    }
  }

  .form-answer__title {
    width: 100%;

    @media (max-width: 768px) {
      text-align: center;
    }
  }

  .form-answer__message {
    width: 100%;

    @media (max-width: 768px) {
      text-align: center;
    }
  }

  .form-answer__continue {
    --type: close;
    width: 100%;
  }
</style>

<script>
  import { PopoverElement } from 'aptechka/popover'

  export class FormAnswerElement extends PopoverElement {
    #titleElement: HTMLElement | null = null
    #messageElement: HTMLElement | null = null

    public setText(title: string, message: string) {
      if (this.#titleElement) {
        this.#titleElement.innerHTML = title
      }

      if (this.#messageElement) {
        this.#messageElement.innerHTML = message
      }
    }

    protected override connectedCallback() {
      super.connectedCallback()

      this.#titleElement = this.querySelector('.form-answer__title')
      this.#messageElement = this.querySelector('.form-answer__message')
    }

    protected override disconnectedCallback() {
      super.disconnectedCallback()
    }
  }

  if (!customElements.get('e-form-answer')) {
    customElements.define('e-form-answer', FormAnswerElement)
  }

  declare global {
    interface HTMLElementTagNameMap {
      'e-form-answer': FormAnswerElement
    }
  }
</script>

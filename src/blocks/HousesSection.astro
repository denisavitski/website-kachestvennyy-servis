---
import Portional from '@elements/Portional.astro'
import RadioButtons from '@elements/RadioButtons.astro'
import TextCard, { type Props as TextCardProps } from '@elements/TextCard.astro'

export interface Props {
  heading?: string
  cards?: Array<Pick<TextCardProps, 'title' | 'value'> & { street: string }>
}

const {
  heading = 'Дома в управлении',
  cards = [
    {
      title: 'ДОМ №12',
      value: 'Улица 1',
      street: 'Улица 1',
    },
    {
      title: 'ДОМ №12',
      value: 'Улица 2',
      street: 'Улица 2',
    },
    {
      title: 'ДОМ №12',
      value: 'Улица 3',
      street: 'Улица 3',
    },
    {
      title: 'ДОМ №12',
      value: 'Улица 4',
      street: 'Улица 4',
    },
    {
      title: 'ДОМ №12',
      value: 'Улица 5',
      street: 'Улица 5',
    },
    {
      title: 'ДОМ №12',
      value: 'Улица 6',
      street: 'Улица 6',
    },
  ],
} = Astro.props
---

<e-houses class="houses">
  <h2
    class="font-h1 font-mob-h1 houses__heading"
    set:html={heading}
  />

  <div class="houses__map-wrapper"></div>

  <Portional
    itemsPerPage={9}
    class="houses__portional"
  >
    <RadioButtons
      class="houses__radio-buttons"
      inputs={[
        { title: 'Все улицы', value: '' },
        ...cards.map((card) => {
          return {
            title: card.street,
            value: card.street,
          }
        }),
      ]}
    />

    <div class="houses__list">
      {
        cards.map((card, i) => {
          return (
            <TextCard
              {...card}
              iconPosition="top"
              icon="logo"
              class="houses__item__card"
              data-item
              aria-hidden={i > 9}
              class="houses__item"
              data-group={card.street}
            />
          )
        })
      }
    </div>
  </Portional>
</e-houses>

<style is:global>
  .houses {
    display: flex;
    flex-direction: column;
    padding: var(--section-vertical-padding) var(--screen-horisontal-padding);
    padding-top: 0;
  }

  .houses__heading {
    margin-bottom: 5rem;

    @media (max-width: 768px) {
      margin-bottom: 3rem;
    }
  }

  .houses__map-wrapper {
    width: calc(100% + var(--screen-horisontal-padding) * 2);
    margin-left: calc(var(--screen-horisontal-padding) * -1);
    height: 61.9rem;
    margin-bottom: 10rem;

    background-color: var(--color-highlite);

    @media (max-width: 768px) {
      height: 36rem;
      margin-bottom: 5rem;
    }
  }

  .houses__portional {
    display: block;
  }

  .houses__radio-buttons {
    margin-bottom: 10rem;

    @media (max-width: 768px) {
      margin-bottom: 5rem;
    }
  }

  .houses__list {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 5rem 8.75rem;

    @media (max-width: 768px) {
      grid-template-columns: 100%;
      gap: 3rem;
    }
  }

  .houses__item__card {
    min-height: 30.5rem;

    justify-content: space-between;
  }
</style>

<script>
  export class HousesElement extends HTMLElement {
    protected connectedCallback() {}

    protected disconnectedCallback() {}
  }

  if (!customElements.get('e-houses')) {
    customElements.define('e-houses', HousesElement)
  }

  declare global {
    interface HTMLElementTagNameMap {
      'e-houses': HousesElement
    }
  }
</script>
